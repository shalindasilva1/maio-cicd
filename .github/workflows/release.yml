name: release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write
  packages: write

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  PYTHON_VERSION: '3.11'

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install dependencies
        shell: bash
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi
          # If your train script lives in a package, also allow editable:
          if [ -f pyproject.toml ] || [ -f setup.cfg ] || [ -f setup.py ]; then pip install -e .; fi

      - name: Train model (bake artifacts)
        shell: bash
        run: |
          python -m ml.train --seed 42 --output-dir artifacts --version "${GITHUB_REF_NAME}"
          ls -l artifacts
          mkdir -p app/model
          cp artifacts/pipeline.pkl app/model/
          cp artifacts/feature_names.json app/model/
          echo "${GITHUB_REF_NAME}" > app/model/MODEL_VERSION

      - name: Unit tests
        env:
          PYTHONPATH: ${{ github.workspace }}
        run: pytest -q

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker metadata (tags & labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=latest
            type=raw,value=${{ github.ref_name }}    # e.g. v0.1.0
          labels: |
            org.opencontainers.image.title=Virtual Diabetes Clinic ML API
            org.opencontainers.image.description=FastAPI scoring service with baked diabetes model
            org.opencontainers.image.version=${{ github.ref_name }}
            org.opencontainers.image.source=${{ github.repositoryUrl }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build & push image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=registry,ref=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:buildcache
          cache-to: type=registry,ref=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:buildcache,mode=max
          provenance: false

      - name: Upload artifacts (for release assets)
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: |
            artifacts/metrics.json
            artifacts/*.pkl
            artifacts/*.json
          if-no-files-found: warn
          retention-days: 7

      - name: Create GitHub Release + attach metrics.json
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          generate_release_notes: true
          files: |
            artifacts/metrics.json
